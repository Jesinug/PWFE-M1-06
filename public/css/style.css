/* {
	outline: dotted 1px red;
}*/

body {
	font-family: "Arial";
	font-size: 14px;
	color: #222;
}
img {
	display: block;
	width: 100%;
}
header {
	background-color: #333;
	padding: 10px;
	overflow: hidden;
}
header h1 {
	color: #FFF;
	float: left;
	font-size: 24px;
	font-weight: 700;
	background-image: url("../img/logo.png");
	background-repeat: no-repeat;
	background-size: contain;
	background-position: left center;
	padding-left: 60px;
	margin-top: 5px;
}
nav {
	float: right;
}
header nav ul {

}
header nav li {
	display: inline-block;
}
nav li a {
	text-decoration: none;
	color: #FFF;
	display: block;
	padding: 10px;
}
nav li a:hover {
	color: #333;
	background-color: #FFF;
}
#noticias-destacadas img {
	width: 100%;
	
}
#noticias-destacadas h2 {
	background-color: #333;
	color: #FFF;
	font-weight: 700;
	padding: 20px;
	font-size: 48px;
}

.noticia {
	display: flex;
	flex-direction: row; /* El resto de las opciones de esta propiedad de Flex: row / column / row-reverse / column-reverse */
	align-items: center; /* El resto de las opciones de esta propiedad de Flex: flex-star / center / flex-end */
	justify-content: space-around; /* El resto de las opciones de esta propiedad de Flex: flex-start / center / flex-end / space-around */

	border-bottom: solid 1px #DDD;
	margin: 0 20px;

/* PARA hacer que las lineas (border) q siguen las cajas de cada noticia no lleguen hasta el final de la pantalla
deberiamos aplicar un margin. Hay tres versiones. 
La version extendida es:
	margin-top: 0;
	margin-bottom: 0;
	margin- right: 20px;
	margin-left: 20px;

Una version mas simplificada es:
	margin: 0 20px 0 20px; (as in: top/right/bottom/left, o configuracion con el sentido de las agujas del reloj)

La verion todavia mas simplificada (y que es la elegida) es:
	margin: 0 20px; (As in: ejes Y / X)

*/
}

.noticia:last-child {
	border: none
}
.noticia-img {
	width: 30%
}
.noticia-txt {
	width: 65% /* el porcentaje que le otorge a cada width de cada uno de los elementos debe darme un porcentaje con 
	el cual flex debera gestioanr los espacios, en este caso tendra un 5% para definir los margenes */
}
.noticia-txt h3 {
	font-size: 32px;
	font-weight: 700;
}
.noticia-txt p {	
	font-size: 20px; 
}
.noticia-txt p:nth-of-type(1) { /* Esto es para hacer que un <p> tenga negrita pero esto no aplique para el resto de los <p> */
	font-weight: 700;	
}

.noticia-txt h3,
.noticia-txt p {
	line-height: 1.5;
	margin-top: 15px;
	margin-bottom: 15px;
}

footer {
	background-color: #333;
	padding: 10px;
	text-align: center;
	color: #FFF;
	font-size: 12px;
	margin-top: 10px;
}
#tabla-posiciones table,
#tabla-posiciones tr,
#tabla-posiciones th,
#tabla-posiciones td {
	border: solid 1px #000
}
#tabla-posiciones table {
	margin: auto; /* El margin auto hace q el programa distribuya proporcionalmente el espacio vacio de 
	los costados, es decir, es una manera de centrar el bloque) */
	width: 60%
}
#tabla-posiciones td, 
#tabla-posiciones th {
	padding: 15px;
}
#tabla-posiciones th {
	background-color: #FF0000;
	color: #FFFFFF;
	font-weight: 700;
	font-size: 24px;
}
#tabla-posiciones td {
	background-color: #D9D9D9;
	vertical-align: middle; /* Vertical align es una propiedad q nos permite elegir la ubicacion vertical (en el eje Y) de un texto;
								en este caso el valor middle lo ubicara en la mitad "del renglon" */
}
#tabla-posiciones tr {
	 border-bottom: solid 1px #A1A1A1;
}
#tabla-posiciones td:nth-of-type(odd) { /* Odd e Even son valores que nos permite q CSS diferencie entre celdas pares e impare; sirve
	cuando queremos estilizar determinadas celdas y otras no */
	font-weight: 700;
	text-align: center;
	font-size: 24px;
}
#tabla-posiciones td:nth-of-type(even) span {
	font-weight: 700;
	color: darkblue;
} 
#tabla-posiciones tr:last-child {
	border: none;
}

button {
	display: none;
}

/******* ACA EMPIEZA LA MEDIA QUERY ********/

@media screen and (max-width: 767px){   /* MEDIAS QUERY: Son areas construidas en el marco de CSS (se crea con un bloque encabezado por @media (seguido por el dispositivo con el q va a intarectuar esta area) y seguido por un and () {}
donde aplicamos reglas q solo van a aplicar si la pantalla mide XSiginfica q estas reglas (estilos) se van a aplicar en pantallas de hasta cierto ancho, en este caso
	una tablet de 7'). Es decir: este CSS se va a aplicar s√≥lo si la pantalla mide 768px */
	nav {
		display: none;
		float: none;
		clear: both;
	}

	nav li {
		display: block;
		text-align: center;
	}

	.noticia {
		flex-direction: column;	
	}

	.noticia-img,
	.noticia-txt {
		width: 100%;
	}
	button {
		display: block;
		padding: 5px;
		border: none;
		background-color: transparent;
		color: #FFF;
		font-weight: 700;
		font-size: 20px;
		line-height: 1;
		float: right;

	}
	button:focus + nav {
		display: block;
	}

@media screen and (max-width: 575px){ /* <-- Hasta un smartphone de 6' */
/****************/
}